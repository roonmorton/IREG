-- MySQL Script generated by MySQL Workbench
-- Wed May 31 08:05:28 2017
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema DBIREG
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema DBIREG
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `DBIREG` DEFAULT CHARACTER SET utf8 ;
USE `DBIREG` ;

-- -----------------------------------------------------
-- Table `DBIREG`.`TblPais`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DBIREG`.`TblPais` (
  `idPais` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(75) NULL,
  PRIMARY KEY (`idPais`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DBIREG`.`TblDepartamento`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DBIREG`.`TblDepartamento` (
  `idDepartamento` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(75) NULL,
  `idPais` INT NULL,
  PRIMARY KEY (`idDepartamento`),
  CONSTRAINT `fk_TblDepartamento_TblPais`
    FOREIGN KEY (`idPais`)
    REFERENCES `DBIREG`.`TblPais` (`idPais`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_TblDepartamento_TblPais_idx` ON `DBIREG`.`TblDepartamento` (`idPais` ASC);


-- -----------------------------------------------------
-- Table `DBIREG`.`TblMunicipio`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DBIREG`.`TblMunicipio` (
  `idMunicipio` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NULL,
  `codigoPostal` VARCHAR(20) NULL,
  `idDepartamento` INT NULL,
  PRIMARY KEY (`idMunicipio`),
  CONSTRAINT `fk_TblMunicipio_TblDepartamento1`
    FOREIGN KEY (`idDepartamento`)
    REFERENCES `DBIREG`.`TblDepartamento` (`idDepartamento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_TblMunicipio_TblDepartamento1_idx` ON `DBIREG`.`TblMunicipio` (`idDepartamento` ASC);


-- -----------------------------------------------------
-- Table `DBIREG`.`TblAldea`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DBIREG`.`TblAldea` (
  `idAldea` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(75) NULL,
  PRIMARY KEY (`idAldea`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DBIREG`.`TblCantonZona`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DBIREG`.`TblCantonZona` (
  `idCantonZona` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(75) NULL,
  PRIMARY KEY (`idCantonZona`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DBIREG`.`TblCaserio`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DBIREG`.`TblCaserio` (
  `idcaserio` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(75) NULL,
  PRIMARY KEY (`idcaserio`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DBIREG`.`TblMunicipioHasAldea`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DBIREG`.`TblMunicipioHasAldea` (
  `idMunicipioHasAldea` INT NOT NULL AUTO_INCREMENT,
  `idMunicipio` INT NULL,
  `idAldea` INT NULL,
  `idCantonZona` INT NULL,
  `idCaserio` INT NULL,
  PRIMARY KEY (`idMunicipioHasAldea`),
  CONSTRAINT `fk_TblMunicipiHasAldea_TblMunicipio1`
    FOREIGN KEY (`idMunicipio`)
    REFERENCES `DBIREG`.`TblMunicipio` (`idMunicipio`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_TblMunicipiHasAldea_TblAldea1`
    FOREIGN KEY (`idAldea`)
    REFERENCES `DBIREG`.`TblAldea` (`idAldea`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_TblMunicipiHasAldea_TblCantonZona1`
    FOREIGN KEY (`idCantonZona`)
    REFERENCES `DBIREG`.`TblCantonZona` (`idCantonZona`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_TblMunicipiHasAldea_TblCaserio1`
    FOREIGN KEY (`idCaserio`)
    REFERENCES `DBIREG`.`TblCaserio` (`idcaserio`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_TblMunicipiHasAldea_TblMunicipio1_idx` ON `DBIREG`.`TblMunicipioHasAldea` (`idMunicipio` ASC);

CREATE INDEX `fk_TblMunicipiHasAldea_TblAldea1_idx` ON `DBIREG`.`TblMunicipioHasAldea` (`idAldea` ASC);

CREATE INDEX `fk_TblMunicipiHasAldea_TblCantonZona1_idx` ON `DBIREG`.`TblMunicipioHasAldea` (`idCantonZona` ASC);

CREATE INDEX `fk_TblMunicipiHasAldea_TblCaserio1_idx` ON `DBIREG`.`TblMunicipioHasAldea` (`idCaserio` ASC);


-- -----------------------------------------------------
-- Table `DBIREG`.`TblUsuario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DBIREG`.`TblUsuario` (
  `idUsuario` int(20) NOT NULL,
  `nombres` VARCHAR(75) NULL,
  `calle` VARCHAR(75) NULL,
  `numero` VARCHAR(15) NULL,
  `piso` VARCHAR(10) NULL,
  `unidad` VARCHAR(20) NULL,
  `telefono` VARCHAR(10) NULL,
  `idMunicipioHasAldea` INT NOT NULL,
  `idU` INT NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`idU`),
  CONSTRAINT `fk_TblUsuario_TblMunicipioHasAldea1`
    FOREIGN KEY (`idMunicipioHasAldea`)
    REFERENCES `DBIREG`.`TblMunicipioHasAldea` (`idMunicipioHasAldea`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_TblUsuario_TblMunicipioHasAldea1_idx` ON `DBIREG`.`TblUsuario` (`idMunicipioHasAldea` ASC);


-- -----------------------------------------------------
-- Table `DBIREG`.`TblDistribuidor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DBIREG`.`TblDistribuidor` (
  `idDistribuidor` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(75) NULL,
  `codigo` VARCHAR(1) NULL,
  `idPais` INT NOT NULL,
  PRIMARY KEY (`idDistribuidor`),
  CONSTRAINT `fk_TblDistribuidor_TblPais1`
    FOREIGN KEY (`idPais`)
    REFERENCES `DBIREG`.`TblPais` (`idPais`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_TblDistribuidor_TblPais1_idx` ON `DBIREG`.`TblDistribuidor` (`idPais` ASC);


-- -----------------------------------------------------
-- Table `DBIREG`.`TblTipoCuenta`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DBIREG`.`TblTipoCuenta` (
  `idTipoCuenta` INT NOT NULL AUTO_INCREMENT,
  `descripcion` VARCHAR(45) NULL,
  PRIMARY KEY (`idTipoCuenta`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DBIREG`.`TblCuenta`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DBIREG`.`TblCuenta` (
  `idCuenta` INT NOT NULL AUTO_INCREMENT,
  `nombres` VARCHAR(75) NULL,
  `nombreUsuario` VARCHAR(20) NULL,
  `contrasena` VARCHAR(40) NULL DEFAULT 'xx',
  `estadoPass` INT NULL DEFAULT 0,
  `idDistribuidor` INT NULL,
  `idTipoCuenta` INT NOT NULL,
  PRIMARY KEY (`idCuenta`),
  CONSTRAINT `fk_TblCuenta_TblDistribuidor1`
    FOREIGN KEY (`idDistribuidor`)
    REFERENCES `DBIREG`.`TblDistribuidor` (`idDistribuidor`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_TblCuenta_TblTipoCuenta1`
    FOREIGN KEY (`idTipoCuenta`)
    REFERENCES `DBIREG`.`TblTipoCuenta` (`idTipoCuenta`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_TblCuenta_TblDistribuidor1_idx` ON `DBIREG`.`TblCuenta` (`idDistribuidor` ASC);

CREATE INDEX `fk_TblCuenta_TblTipoCuenta1_idx` ON `DBIREG`.`TblCuenta` (`idTipoCuenta` ASC);


-- -----------------------------------------------------
-- Table `DBIREG`.`TblArchivo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DBIREG`.`TblArchivo` (
  `idArchivo` INT NOT NULL AUTO_INCREMENT,
  `fecha` DATETIME NULL,
  `calidadServicio` VARCHAR(1) NULL,
  `anio` INT NULL,
  `mes` VARCHAR(2) NULL,
  `nombreTabla` VARCHAR(75) NULL,
  `idCuenta` INT NOT NULL,
  PRIMARY KEY (`idArchivo`),
  CONSTRAINT `fk_TblArchivo_TblCuenta1`
    FOREIGN KEY (`idCuenta`)
    REFERENCES `DBIREG`.`TblCuenta` (`idCuenta`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_TblArchivo_TblCuenta1_idx` ON `DBIREG`.`TblArchivo` (`idCuenta` ASC);


-- -----------------------------------------------------
-- Table `DBIREG`.`TblMedidor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DBIREG`.`TblMedidor` (
  `idMedidor` INT NOT NULL AUTO_INCREMENT,
  `descripcion` VARCHAR(75) NULL,
  `tipoMedidor` VARCHAR(75) NULL,
  PRIMARY KEY (`idMedidor`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DBIREG`.`TblTarifa`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DBIREG`.`TblTarifa` (
  `idTarifa` INT NOT NULL AUTO_INCREMENT,
  `descripcion` VARCHAR(220) NULL,
  `siglas` VARCHAR(15) NULL,
  PRIMARY KEY (`idTarifa`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DBIREG`.`TblPlanFacturacion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DBIREG`.`TblPlanFacturacion` (
  `idPlanFacturacion` INT NOT NULL AUTO_INCREMENT,
  `codigo` VARCHAR(10) NULL,
  PRIMARY KEY (`idPlanFacturacion`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DBIREG`.`TblPotencia`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DBIREG`.`TblPotencia` (
  `idPotencia` INT NOT NULL AUTO_INCREMENT,
  `cantidad` DECIMAL(16,2) NULL,
  PRIMARY KEY (`idPotencia`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DBIREG`.`TblRegistro`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DBIREG`.`TblRegistro` (
  `idRegistro` INT NOT NULL AUTO_INCREMENT,
  `tipoRegistro` VARCHAR(1) NULL,
  `idArchivo` INT NOT NULL,
  `idTarifa` INT NOT NULL,
  `idPlanFacturacion` INT NOT NULL,
  `idPotencia` INT NULL,
  `idUsuario` INT NOT NULL,
  PRIMARY KEY (`idRegistro`),
  CONSTRAINT `fk_TblRegistro_TblArchivo1`
    FOREIGN KEY (`idArchivo`)
    REFERENCES `DBIREG`.`TblArchivo` (`idArchivo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_TblRegistro_TblTarifa1`
    FOREIGN KEY (`idTarifa`)
    REFERENCES `DBIREG`.`TblTarifa` (`idTarifa`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_TblRegistro_TblPlanFacturacion1`
    FOREIGN KEY (`idPlanFacturacion`)
    REFERENCES `DBIREG`.`TblPlanFacturacion` (`idPlanFacturacion`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_TblRegistro_TblPotencia1`
    FOREIGN KEY (`idPotencia`)
    REFERENCES `DBIREG`.`TblPotencia` (`idPotencia`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_TblRegistro_TblUsuario1`
    FOREIGN KEY (`idUsuario`)
    REFERENCES `DBIREG`.`TblUsuario` (`idU`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_TblRegistro_TblArchivo1_idx` ON `DBIREG`.`TblRegistro` (`idArchivo` ASC);

CREATE INDEX `fk_TblRegistro_TblTarifa1_idx` ON `DBIREG`.`TblRegistro` (`idTarifa` ASC);

CREATE INDEX `fk_TblRegistro_TblPlanFacturacion1_idx` ON `DBIREG`.`TblRegistro` (`idPlanFacturacion` ASC);

CREATE INDEX `fk_TblRegistro_TblPotencia1_idx` ON `DBIREG`.`TblRegistro` (`idPotencia` ASC);

CREATE INDEX `fk_TblRegistro_TblUsuario1_idx` ON `DBIREG`.`TblRegistro` (`idUsuario` ASC);


-- -----------------------------------------------------
-- Table `DBIREG`.`TblMedidor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DBIREG`.`TblMedidor` (
  `idMedidor` INT NOT NULL AUTO_INCREMENT,
  `descripcion` VARCHAR(75) NULL,
  `tipoMedidor` VARCHAR(75) NULL,
  PRIMARY KEY (`idMedidor`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DBIREG`.`TblRegistroHasMedidor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DBIREG`.`TblRegistroHasMedidor` (
  `idRegistroHasMedidor` INT NOT NULL AUTO_INCREMENT,
  `idRegistro` INT NOT NULL,
  `fechaColocacion` VARCHAR(40) NULL,
  `noMedidor` VARCHAR(45) NULL,
  `idMedidor` INT NOT NULL,
  PRIMARY KEY (`idRegistroHasMedidor`),
  CONSTRAINT `fk_TblRegistro_has_TblMedidor_TblRegistro1`
    FOREIGN KEY (`idRegistro`)
    REFERENCES `DBIREG`.`TblRegistro` (`idRegistro`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_TblRegistroHasMedidor_TblMedidor1`
    FOREIGN KEY (`idMedidor`)
    REFERENCES `DBIREG`.`TblMedidor` (`idMedidor`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_TblRegistro_has_TblMedidor_TblRegistro1_idx` ON `DBIREG`.`TblRegistroHasMedidor` (`idRegistro` ASC);

CREATE INDEX `fk_TblRegistroHasMedidor_TblMedidor1_idx` ON `DBIREG`.`TblRegistroHasMedidor` (`idMedidor` ASC);


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;



SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

insert into TblPais(nombre) values('Guatemala');

insert into tbltipoCuenta(descripcion) values('admin');
insert into tblCuenta(nombres,nombreUsuario,idTipoCuenta) values('Administrador', 'admin', (SELECT MAX(idTipoCuenta) as id from TblTipoCuenta));
insert into tbltipoCuenta(descripcion) values('agente');
insert into tbltipoCuenta(descripcion) values('analista');



DROP PROCEDURE IF EXISTS PRUEBA;
DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `prueba`(
    IN _usuario VARCHAR(45),
    IN _departamento VARCHAR(75),
    IN _municipio varchar(75),
    IN _codigoPostal varchar(20),
    IN _aldea varchar(75),
    IN _canton varchar(75),
    IN _caserio varchar(75),
    IN _id_Usuario varchar(75),
    IN _nombreUsuario varchar(75),
    IN _calle varchar(75),
    IN _numeroCalle varchar(75),
    IN _piso varchar(75),
    IN _unidad varchar(10),
    IN _telefono varchar(10),
    IN _potencia decimal(16,2),
    IN _planFacturacion varchar(15),
    IN _tarifa varchar(5),
    
    IN _noMedidor1 varchar(40),
    IN _tipoMedidor1 varchar(35),
    IN _FechaColocacion1 varchar(75),
    IN _noMedidor2 varchar(40),
    IN _tipoMedidor2 varchar(35),
    IN _FechaColocacion2  varchar(75),
    IN _noMedidor3 varchar(40),
    IN _tipoMedidor3 varchar(35),
    IN _FechaColocacion3 varchar(75),
    
    IN _calidaServicio varchar(2),
    IN _anio varchar(4),
    IN _mes varchar(2),
    IN _nombreTabla varchar(75),
    
    IN _tipoRegistro varchar(2),
    

    OUT _msg varchar(75),
    OUT _registro varchar(75),
    IN _idArchivo varchar(60) 
)
BEGIN

    DECLARE pidPais int DEFAULT 0;
    DECLARE pidDepartamento int DEFAULT 0;
        DECLARE pidMunicipio int DEFAULT 0;
    	DECLARE pidAldea int DEFAULT 0;
        DECLARE pidCanton int DEFAULT 0;
        DECLARE pidCaserio int DEFAULT 0;
        DECLARE pidMunicipioAldea int DEFAULT 0;
        DECLARE pidPotencia int DEFAULT 0;
        DECLARE pidPlanFacturacion int DEFAULT 0;
        DECLARE pidTarifa int DEFAULT 0;
        DECLARE pidMedidor int DEFAULT 0;
        DECLARE pidArchivo int DEFAULT 0;
        DECLARE pidUsuario int DEFAULT 0;
        DECLARE pidRegistro int DEFAULT 0;

        SET pidPais = (SELECT pais.idPais from tblPais as pais 
                       INNER JOIN tblDistribuidor as distribuidor 
                       ON pais.idPais = distribuidor.idPais 
                       INNER JOIN TblCuenta as cuenta 
                       ON cuenta.idDistribuidor = distribuidor.idDistribuidor 
                       WHERE cuenta.nombreUsuario = _Usuario);

        
        IF pidPais > 0 THEN

            
            IF EXISTS(select 1 from tbldepartamento where nombre = _Departamento and idPais = pidPais) THEN
                SET pidDepartamento = (select idDepartamento from tbldepartamento WHERE nombre = _Departamento and idPais = pidPais);
            ELSE
                INSERT INTO tbldepartamento(nombre, idPais) VALUES(_Departamento,pidPais);
                SET pidDepartamento = (select LAST_INSERT_ID());
            END IF;

            
            IF EXISTS(SELECT 1 FROM tblmunicipio WHERE nombre = _municipio AND idDepartamento = pidDepartamento AND codigoPostal = _codigoPostal) THEN
                SET pidMunicipio = (SELECT idMunicipio FROM tblmunicipio WHERE nombre = _municipio AND idDepartamento = pidDepartamento AND codigoPostal = _codigoPostal);
            ELSE
                    INSERT INTO tblmunicipio(nombre,idDepartamento,codigoPostal) VALUES(_municipio,pidDepartamento,_codigoPostal);
                    SET pidMunicipio = (SELECT LAST_INSERT_ID());
            END if;

			
            IF EXISTS(SELECT 1 FROM tblaldea WHERE nombre = _aldea) THEN
            	SET pidAldea = (SELECT idAldea FROM tblaldea WHERE nombre = _aldea);
            ELSE
                    INSERT INTO tblaldea(nombre) VALUES(_aldea);
                    SET pidAldea = (SELECT LAST_INSERT_ID());
            END IF;

            
            IF EXISTS( SELECT 1 FROM tblcantonzona WHERE nombre = _canton) THEN
            	SET pidCanton = (SELECT idCantonZona FROM tblcantonzona WHERE nombre = _canton);
            ELSE
            	INSERT INTO tblcantonzona(nombre) VALUES(_canton);
                SET pidCanton = (SELECT LAST_INSERT_ID());
            END IF;


            
            IF EXISTS( SELECT 1 FROM tblcaserio WHERE nombre = _caserio) THEN
            	SET pidCaserio =  (SELECT idCaserio FROM tblcaserio WHERE nombre = _caserio);
            ELSE
            	INSERT INTO tblcaserio(nombre) VALUES(_caserio);
                SET pidCaserio = (SELECT LAST_INSERT_ID());
            END IF;

            
            IF EXISTS(SELECT 1 from tblmunicipiohasaldea where idMunicipio = pidMunicipio AND idAldea = pidAldea AND idCantonZona = pidCanton AND idCaserio = pidCaserio) THEN
            	SET pidMunicipioAldea = (SELECT idMunicipiohasAldea from tblmunicipiohasaldea where idMunicipio = pidMunicipio AND idAldea = pidAldea AND idCantonZona = pidCanton AND idCaserio = pidCaserio);
            ELSE
                INSERT INTO tblmunicipiohasaldea(idMunicipio,idAldea,idCantonZona,idCaserio) VALUES(pidMunicipio,pidAldea,pidCanton,pidCaserio);
                SET pidMunicipioAldea = (SELECT LAST_INSERT_ID());
            END if;


            
          IF EXISTS(SELECT 1 FROM tblusuario WHERE nombres = _nombreUsuario and calle =_calle and numero = _numeroCalle and piso = _piso and unidad = _unidad and telefono = _telefono and idMunicipioHasAldea = pidMunicipioAldea) THEN
            SET pidUsuario = (SELECT idU FROM tblusuario WHERE nombres = _nombreUsuario and calle =_calle and numero = _numeroCalle and piso = _piso and unidad = _unidad and telefono = _telefono and idMunicipioHasAldea = pidMunicipioAldea);
          ELSE
          	INSERT INTO tblusuario(idUsuario,idMunicipioHasAldea,nombres,calle,numero,piso,unidad,telefono) VALUES(_id_usuario,pidMunicipioAldea,_nombreUsuario,_calle,_numeroCalle,_piso,_unidad,_telefono);
            SET pidUsuario = (SELECT LAST_INSERT_ID());
          END if;


          IF EXISTS(SELECT 1 FROM tblpotencia WHERE cantidad = (CONVERT(_potencia,DECIMAL(10,2))) ) THEN
          	SET pidPotencia = (SELECT idPotencia FROM tblpotencia WHERE cantidad = (CONVERT(_potencia,DECIMAL(10,2))) );
          ELSE
          	INSERT INTO tblpotencia(cantidad) values( (CONVERT(_potencia,DECIMAL(10,2))) );
            SET pidPotencia = (SELECT LAST_INSERT_ID());
          END IF;



            
          IF EXISTS(SELECT 1 FROM tblplanfacturacion WHERE codigo = _planFacturacion) THEN
          	SET pidPlanFacturacion = (SELECT idPlanFacturacion FROM tblplanfacturacion WHERE codigo = _planFacturacion);
          ELSE
          	INSERT INTO tblplanfacturacion(codigo) VALUES(_planFacturacion);
            SET pidPlanFacturacion = (SELECT LAST_INSERT_ID());
          END IF;


            
          IF EXISTS(SELECT 1 FROM tbltarifa WHERE siglas = _tarifa ) THEN
          	SET pidTarifa = (SELECT idTarifa FROM tbltarifa WHERE siglas = _tarifa);
          ELSE
          	INSERT into tbltarifa(siglas) VALUES(_tarifa);
            SET pidTarifa = (SELECT LAST_INSERT_ID());
          END if;


        

        SET pidArchivo = _idArchivo;
        IF NOT EXISTS(SELECT 1 FROM tblArchivo WHERE idArchivo = pidArchivo) THEN
            INSERT INTO tblArchivo(fecha,calidadServicio,anio,mes,nombreTabla,idCuenta) values(NOW(),_calidaServicio, _anio, _mes, _nombreTabla,(select idCuenta from TblCuenta where nombreUsuario = _usuario ));
            SET pidArchivo = (SELECT LAST_INSERT_ID());
        END IF;


		set _registro = pidArchivo;
        
        
        INSERT INTO tblregistro(tipoRegistro,idArchivo,idUsuario,idTarifa,idPlanFacturacion,idPotencia) VALUES(_tipoRegistro,pidArchivo,pidUsuario,pidTarifa,pidPlanFacturacion,pidPotencia);
		        SET pidRegistro = (SELECT LAST_INSERT_ID());
        
        
        
        
        
        IF EXISTS(SELECT 1 FROM tblMedidor WHERE descripcion = _tipoMedidor1) THEN
            SET pidMedidor = (SELECT idMedidor FROM tblMedidor WHERE descripcion = _tipoMedidor1);
        ELSE
            INSERT INTO tblMedidor(descripcion) VALUES(_tipoMedidor1);
            SET pidMedidor = (SELECT LAST_INSERT_ID());
        END IF;
        
        
        INSERT INTO tblRegistroHasMedidor(idRegistro,fechaColocacion,idMedidor,noMedidor) VALUES(pidRegistro,_fechaColocacion1,pidMedidor,_noMedidor1);
        
        
        
        IF EXISTS(SELECT 1 FROM tblMedidor WHERE descripcion = _tipoMedidor2) THEN
            SET pidMedidor = (SELECT idMedidor FROM tblMedidor WHERE descripcion = _tipoMedidor2);
        ELSE
            INSERT INTO tblMedidor(descripcion) VALUES(_tipoMedidor2);
            SET pidMedidor = (SELECT LAST_INSERT_ID());
        END IF;
        
        
           INSERT INTO tblRegistroHasMedidor(idRegistro,fechaColocacion,idMedidor,noMedidor) VALUES(pidRegistro,_fechaColocacion2,pidMedidor,_noMedidor2);
        
        
        
        
        IF EXISTS(SELECT 1 FROM tblMedidor WHERE descripcion = _tipoMedidor3) THEN
            SET pidMedidor = (SELECT idMedidor FROM tblMedidor WHERE descripcion = _tipoMedidor3);
        ELSE
            INSERT INTO tblMedidor(descripcion) VALUES(_tipoMedidor3);
            SET pidMedidor = (SELECT LAST_INSERT_ID());
        END IF;
        
        
                   INSERT INTO tblRegistroHasMedidor(idRegistro,fechaColocacion,idMedidor,noMedidor) VALUES(pidRegistro,_fechaColocacion3,pidMedidor,_noMedidor3);

            
            set _registro = pidArchivo;
         set _msg = "FIN";

        ELSE
            SET _msg = "error";
        END IF;

END$$
DELIMITER ;